version: '2.2'
services:
  app:
    build:
      context: ./
      args:
        - ENVIRONMENT=DEV
    image: {{cookiecutter.project_shortname}}
    restart: "unless-stopped"
    environment:
      - "INVENIO_ACCOUNTS_SESSION_REDIS_URL=redis://cache:6379/1"
      - "INVENIO_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CACHE_REDIS_URL=redis://cache:6379/0"
      - "INVENIO_CACHE_TYPE=redis"
      - "INVENIO_CELERY_BROKER_URL=amqp://guest:guest@mq:5672/"
      - "INVENIO_CELERY_RESULT_BACKEND=redis://cache:6379/2"
      - "INVENIO_SEARCH_HOSTS=['search:9200']"
      - "INVENIO_SECRET_KEY=CHANGE_ME"
      {%- if cookiecutter.database == 'postgresql'%}
      - "INVENIO_SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://{{cookiecutter.project_shortname}}:{{cookiecutter.project_shortname}}@db/{{cookiecutter.project_shortname}}"
      {%- elif cookiecutter.database == 'mysql'%}
      - "INVENIO_SQLALCHEMY_DATABASE_URI=mysql+pymysql://{{cookiecutter.project_shortname}}:{{cookiecutter.project_shortname}}@db/{{cookiecutter.project_shortname}}"
      {%- endif %}
      - "INVENIO_WSGI_PROXIES=2"
      - "INVENIO_RATELIMIT_STORAGE_URL=redis://cache:6379/3"
  frontend:
    build: ./docker/nginx/
    image: {{cookiecutter.project_shortname}}-frontend
    restart: "unless-stopped"
  cache:
    image: redis:7
    restart: "unless-stopped"
    read_only: true
  {%- if cookiecutter.database == 'postgresql'%}
  db:
    image: postgres:12.4
    restart: "unless-stopped"
    environment:
      - "POSTGRES_USER={{cookiecutter.project_shortname}}"
      - "POSTGRES_PASSWORD={{cookiecutter.project_shortname}}"
      - "POSTGRES_DB={{cookiecutter.project_shortname}}"
  pgadmin:
    image: dpage/pgadmin4:6
    restart: "unless-stopped"
    environment:
      PGADMIN_DEFAULT_EMAIL: "{{cookiecutter.author_email}}"
      PGADMIN_DEFAULT_PASSWORD: "{{cookiecutter.project_shortname}}"
    volumes:
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
  {%- elif cookiecutter.database == 'mysql'%}
  db:
    image: mysql
    restart: "unless-stopped"
    environment:
      - "MYSQL_ROOT_PASSWORD={{cookiecutter.project_shortname}}"
      - "MYSQL_DATABAE={{cookiecutter.project_shortname}}"
      - "MYSQL_USER={{cookiecutter.project_shortname}}"
      - "MYSQL_PASSWORD={{cookiecutter.project_shortname}}"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: "unless-stopped"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: {{cookiecutter.project_shortname}}
  {%- endif %}
  mq:
    image: rabbitmq:3-management
    restart: "unless-stopped"
  {%- if cookiecutter.search in ['opensearch1', 'opensearch2'] %}
    {%- if cookiecutter.search == 'opensearch1' %}
      {%- set os_version = "1.3.5" %}
      {%- set dashboards_version = "1.3.5" %}
    {%- elif cookiecutter.search == 'opensearch2' %}
      {%- set os_version = "2.3.0" %}
      {%- set dashboards_version = "2.3.0" %}
    {%- endif %}
  search:
    image: opensearchproject/opensearch:{{ os_version }}
    restart: "unless-stopped"
    environment:
      # settings only for development. DO NOT use in production!
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - "discovery.type=single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:{{ dashboards_version }}
    expose:
      - "5601"
    environment:
      # settings only for development. DO NOT use in production!
      - 'OPENSEARCH_HOSTS=["http://search:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
  {%- elif cookiecutter.search == 'elasticsearch7' %}{# Do not update to 7.11 #}
  search:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    restart: "unless-stopped"
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:9200/_cluster/health?wait_for_status=green"]
      interval: 30s
      timeout: 30s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    environment:
      - "ELASTICSEARCH_HOSTS=http://search:9200"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  {%- endif %}
{%- if cookiecutter.file_storage == 'S3'%}
  s3:
    image: minio/minio
    restart: "unless-stopped"
    environment:
      MINIO_ROOT_USER: CHANGE_ME
      MINIO_ROOT_PASSWORD: CHANGE_ME
    volumes:
      - ./data:/data
    command: server /data --console-address :9001
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
{%- endif %}
